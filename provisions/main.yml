---

- hosts: all
  user: vagrant
  sudo: false

  # vars:
  #   PORT_NUM: 6543

  tasks:



  #   # by having a tag we can narrow down a specific group of tasks
  #   # during configuration.
    - name: update cache / upgrade pkgs
      sudo: true
      apt: update_cache=yes upgrade=dist cache_valid_time=3600
      tags:
        - apt

    # - name: allow bash profile to be loaded by ssh
    #   sudo: false
    #   lineinfile: dest=~/.bashrc regexp='[ -z "$PS1" ] && return' line='# [ -z "$PS1" ] && return' state=present
    #   # when: {{ ansible_pkg_mgr }} == "apt"

  #   # combined install of these packages as vagrant reconnects for each task (this should speed things up!)
    - name: install dev pkgs / EMP stack
      sudo: true
      apt: pkg={{ item }}
      with_items:
        - build-essential
        ## debian uses linux-headers-amd64
        - linux-headers-amd64
        ## ubuntu uses linux-generic
        # - linux-generic
        - nfs-common
        - nfs-kernel-server
        - rpcbind
        - curl
        - vim
        - htop
        - git
        - mysql-server
        - mysql-client
        - python-apt
        - python-mysqldb
        - nginx
        - php5-fpm
        - php5-mysql
        - php5-cli
        - php5-curl
        - php5-mcrypt
        - php5-sqlite

      tags:
        - apt
        - mysql
        - nginx
        - php



    - name: configure nginx startup
      sudo: true
      template: src=configs/nginx-conf/nginx.j2 dest=/etc/nginx/nginx.conf
      tags:
       - nginx

    - name: configure nginx default
      sudo: true
      template: src=configs/nginx-conf/default.j2 dest=/etc/nginx/sites-enabled/default
      tags:
        - nginx

    - name: Create global directory for nginx config files
      sudo: true
      file: state=directory path=/etc/nginx/global owner=root group=root mode=0644

    - name: Add nginx restrictions file
      sudo: true
      template: src=configs/nginx-conf/restrictions.j2 dest=/etc/nginx/global/restrictions.conf owner=root group=root mode=0644 
      tags:
        - nginx

    - name: Add Wordpress specific configuration file
      sudo: true
      template: src=configs/nginx-conf/wordpress.j2 dest=/etc/nginx/global/wordpress.conf owner=root group=root mode=0644
      tags:
        - nginx

    - name: setup custom.roadsideweb.com
      sudo: true
      template: src=configs/nginx-conf/custom.roadsideweb.com.j2 dest=/etc/nginx/sites-enabled/custom.roadsideweb.com owner=root group=root mode=0644
      tags:
        - nginx

    # - name: copy php.ini to wp-admin folder
    #   sudo: true
    #   file: src=/etc/php5/fpm/php.ini dest=/var/www/custom.roadsideweb.dev/public_html/wordpress/wp-admin/


    #     # this currently causes a known issue in ansible, fix coming soon, works in 1.4 from git
    # - name: configure php5 www.conf default
    #   sudo: true
    #   template: src=configs/php-conf/www.j2 dest=/etc/php5/fpm/pool.d/www.conf owner=root group=root mode=0644 
    #   tags:
    #     - php

    - name: change mysql to low memory settings
      sudo: true
      template: src=configs/mysql-conf/my.j2 dest=/etc/mysql/my.cnf owner=root group=root mode=0644
      tags:
        - nginx


    # - name: Set phpfpm to listen on TCP port instead of unix socket
    #   lineinfile: "dest=/etc/php5/fpm/pool.d/www.conf regexp='^listen = /var/run/php5-fpm.sock' line='listen = 127.0.0.1:9000'"


      # not necessary with rewritten www.conf
    - name: Set phpfpm to listen on unix socket instead of TCP port
      sudo: true
      lineinfile: dest=/etc/php5/fpm/pool.d/www.conf
        regexp='^listen = 127.0.0.1:9000'
        line='listen = /var/run/php5-fpm.sock'

    - name: Turn on PHP error reporting
      sudo: true
      lineinfile: dest=/etc/php5/fpm/php.ini
        regexp='^display_errors = Off'
        line='display_errors = On'

    # WP Fix im php.ini 
    # See: http://codex.wordpress.org/Nginx
    - name: Turn off cgi.fix_pathinfo for WP compatability
      sudo: true
      lineinfile: dest=/etc/php5/fpm/php.ini
        regexp='^;cgi.fix_pathinfo=1'
        line='cgi.fix_pathinfo = 0;'

    - name: increase maximum upload size to 64mb for wordpress
      sudo: true
      lineinfile: dest=/etc/php5/fpm/php.ini
        regexp='^upload_max_filesize = 2M'
        line='upload_max_filesize = 64M;'

    - name: increase maximum post size to 64mb for wordpress
      sudo: true
      lineinfile: dest=/etc/php5/fpm/php.ini
        regexp='^post_max_size = 8M'
        line='post_max_size = 64M;'



    # - name: enable php-fpm socket
    #   command: cp /etc/php5/fpm/pool.d/www.conf /etc/php5/fpm/pool.d/www.conf.orig
    #   command: sudo sed -i '/listen = 127.0.0.1:9000/c\listen = \/var\/run\/php5-fpm.sock' /etc/php5/fpm/pool.d/www.conf
    #   tags:
    #     - php


    - name: install composer
      sudo: true
      action: shell curl -s https://getcomposer.org/installer | php
      tags:
        - pomander

    - name: move composer executable to /usr/local/bin
      sudo: true
      command: sudo mv composer.phar /usr/local/bin/composer
      tags:
        - pomander

    - name: install pomander
      sudo: true
      command: composer global require pomander/pomander:@stable
      tags:
        - pomander

    - name: install pomander-wordpress
      sudo: true
      command: composer global require pomander/wordpress:@stable
      tags:
        - pomander

    - name: create symlink for pomander
      sudo: true
      file: src=/root/.composer/vendor/bin/pom dest=/usr/local/bin/pom state=link


    - name: restart nginx
      sudo: true
      service: name=nginx state=restarted
      tags:
        - nginx


    - name: restart php-fpm
      sudo: true
      service: name=php5-fpm state=restarted
      tags:
        - php

          ### need to figure out database settings for pomander, then append && sudo pom db:create
    - name: change to pomander directory and do the pomander magic
      action: shell cd /var/www/pomander && sudo pom deploy:wordpress && sudo pom wp_config
      tags:
        -pomander



